"""Add preferences column to traveler_types and users tables

Revision ID: aa7c9965a439
Revises: 65e0eec42de9
Create Date: 2025-10-27 19:18:36.658205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aa7c9965a439'
down_revision: Union[str, Sequence[str], None] = '65e0eec42de9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_blocklist_expires_at'), table_name='token_blocklist')
    op.drop_index(op.f('idx_blocklist_jti'), table_name='token_blocklist')
    op.drop_index(op.f('ix_token_blocklist_expires_at'), table_name='token_blocklist')
    op.drop_index(op.f('ix_token_blocklist_id'), table_name='token_blocklist')
    op.drop_index(op.f('ix_token_blocklist_jti'), table_name='token_blocklist')
    op.drop_table('token_blocklist')
    op.add_column('traveler_types', sa.Column('preferences', sa.JSON(), nullable=True))
    op.add_column('users', sa.Column('preferences', sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'preferences')
    op.drop_column('traveler_types', 'preferences')
    op.create_table('token_blocklist',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('jti', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('revoked_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('token_blocklist_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blocklist_pkey'))
    )
    op.create_index(op.f('ix_token_blocklist_jti'), 'token_blocklist', ['jti'], unique=True)
    op.create_index(op.f('ix_token_blocklist_id'), 'token_blocklist', ['id'], unique=False)
    op.create_index(op.f('ix_token_blocklist_expires_at'), 'token_blocklist', ['expires_at'], unique=False)
    op.create_index(op.f('idx_blocklist_jti'), 'token_blocklist', ['jti'], unique=False)
    op.create_index(op.f('idx_blocklist_expires_at'), 'token_blocklist', ['expires_at'], unique=False)
    # ### end Alembic commands ###
