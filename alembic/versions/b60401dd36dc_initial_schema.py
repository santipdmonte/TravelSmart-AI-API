"""initial schema

Revision ID: b60401dd36dc
Revises: 
Create Date: 2025-08-06 15:26:24.639731

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b60401dd36dc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('itineraries',
    sa.Column('itinerary_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('slug', sa.String(length=255), nullable=True),
    sa.Column('destination', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('travelers_count', sa.Integer(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('trip_type', sa.String(length=20), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('details_itinerary', sa.JSON(), nullable=True),
    sa.Column('trip_name', sa.String(length=200), nullable=False),
    sa.Column('visibility', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transportation_id', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('itinerary_id')
    )
    op.create_index(op.f('ix_itineraries_itinerary_id'), 'itineraries', ['itinerary_id'], unique=False)
    op.create_index(op.f('ix_itineraries_session_id'), 'itineraries', ['session_id'], unique=False)
    op.create_index(op.f('ix_itineraries_slug'), 'itineraries', ['slug'], unique=True)
    op.create_index(op.f('ix_itineraries_transportation_id'), 'itineraries', ['transportation_id'], unique=False)
    op.create_index(op.f('ix_itineraries_user_id'), 'itineraries', ['user_id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question', sa.String(length=500), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('"order" > 0', name='check_question_order_positive'),
    sa.CheckConstraint('length(trim(question)) > 0', name='check_question_not_empty'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transportations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transportation_details', sa.String(length=10000), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('traveler_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('prompt_description', sa.String(length=1000), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('length(trim(name)) > 0', name='check_traveler_type_name_not_empty'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('display_name', sa.String(length=150), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_verification_token', sa.String(length=255), nullable=True),
    sa.Column('email_verification_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferred_currency', sa.String(length=3), nullable=False),
    sa.Column('preferred_travel_style', sa.String(length=20), nullable=True),
    sa.Column('travel_interests', sa.JSON(), nullable=True),
    sa.Column('dietary_restrictions', sa.JSON(), nullable=True),
    sa.Column('accessibility_needs', sa.JSON(), nullable=True),
    sa.Column('countries_visited', sa.JSON(), nullable=True),
    sa.Column('languages_spoken', sa.JSON(), nullable=True),
    sa.Column('travel_experience_level', sa.String(length=20), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('privacy_settings', sa.JSON(), nullable=True),
    sa.Column('measurement_system', sa.String(length=10), nullable=False),
    sa.Column('subscription_type', sa.String(length=20), nullable=False),
    sa.Column('subscription_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_public_profile', sa.Boolean(), nullable=False),
    sa.Column('allow_friend_requests', sa.Boolean(), nullable=False),
    sa.Column('share_travel_stats', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_location', sa.JSON(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_login_location', sa.JSON(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('last_failed_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_failed_login_location', sa.JSON(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('active_sessions', sa.JSON(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_factor_secret', sa.String(length=255), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=False),
    sa.Column('newsletter_subscribed', sa.Boolean(), nullable=False),
    sa.Column('total_trips_created', sa.Integer(), nullable=False),
    sa.Column('total_trips_completed', sa.Integer(), nullable=False),
    sa.Column('favorite_destinations', sa.JSON(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=False),
    sa.Column('onboarding_step', sa.Integer(), nullable=True),
    sa.Column('first_trip_created', sa.Boolean(), nullable=False),
    sa.Column('data_processing_consent', sa.Boolean(), nullable=False),
    sa.Column('data_export_requested_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_deletion_requested_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('referral_code', sa.String(length=20), nullable=True),
    sa.Column('referred_by_user_id', sa.UUID(), nullable=True),
    sa.Column('referral_earnings', sa.Float(), nullable=False),
    sa.Column('last_user_agent', sa.Text(), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_verification_token'),
    sa.UniqueConstraint('password_reset_token')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_referral_code'), 'users', ['referral_code'], unique=True)
    op.create_index(op.f('ix_users_referred_by_user_id'), 'users', ['referred_by_user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('question_options',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('option', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('length(trim(option)) > 0', name='check_option_not_empty'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_traveler_tests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('traveler_type_id', sa.UUID(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('completed_at IS NULL OR completed_at >= started_at', name='check_completion_after_start'),
    sa.ForeignKeyConstraint(['traveler_type_id'], ['traveler_types.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'started_at', name='uq_user_test_session')
    )
    op.create_table('question_option_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_option_id', sa.UUID(), nullable=False),
    sa.Column('traveler_type_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('score >= -10 AND score <= 10', name='check_score_range'),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['traveler_type_id'], ['traveler_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_option_id', 'traveler_type_id', name='uq_question_option_travelertype')
    )
    op.create_table('user_answers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_traveler_test_id', sa.UUID(), nullable=False),
    sa.Column('question_option_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_traveler_test_id'], ['user_traveler_tests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_answers')
    op.drop_table('question_option_scores')
    op.drop_table('user_traveler_tests')
    op.drop_table('question_options')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_referred_by_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_referral_code'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('traveler_types')
    op.drop_table('transportations')
    op.drop_table('questions')
    op.drop_index(op.f('ix_itineraries_user_id'), table_name='itineraries')
    op.drop_index(op.f('ix_itineraries_transportation_id'), table_name='itineraries')
    op.drop_index(op.f('ix_itineraries_slug'), table_name='itineraries')
    op.drop_index(op.f('ix_itineraries_session_id'), table_name='itineraries')
    op.drop_index(op.f('ix_itineraries_itinerary_id'), table_name='itineraries')
    op.drop_table('itineraries')
    # ### end Alembic commands ###
